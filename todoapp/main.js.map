{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/todo/todo.component.css","webpack:///./src/app/components/todo/todo.component.html","webpack:///./src/app/components/todo/todo.component.ts","webpack:///./src/app/services/http-service.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/views/home/home.component.css","webpack:///./src/app/views/home/home.component.html","webpack:///./src/app/views/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n\\n<app-home></app-home>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule} from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport {HttpServiceService} from './services/http-service.service';\nimport { TodoComponent } from './components/todo/todo.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from '../app/views/home/home.component';\nimport {SearchService} from './services/search.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    TodoComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n  HttpServiceService,\n  SearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"nav {\\n    background-color: #2196f3;\\n    color: #fff;    \\n}\\nbutton {\\n    border-color: #fff;\\n    color: #fff;\\n}\\n.dropdown-menu {\\n    left: 48%;\\n}\"","module.exports = \"<nav class=\\\"navbar justify-content-between\\\">\\n  <a class=\\\"navbar-brand\\\">Todo</a>\\n  \\n  <div class=\\\"form-inline\\\">\\n    <div class=\\\"input-group\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchValue\\\" (input)=\\\"changeSearch()\\\" placeholder=\\\"Search\\\">\\n  <div class=\\\"input-group-append\\\">\\n    <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{searchFilter}}</button>\\n    <div class=\\\"dropdown-menu\\\">\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"changeStatus(2)\\\">All</a>\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"changeStatus(1)\\\">Completed</a>\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"changeStatus(0)\\\">Not Completed</a>\\n    </div>\\n  </div>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport {SearchService} from '../../services/search.service';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  status: string;\n  statusMatch = ['Not Completed', 'Completed', 'All'];\n  searchValue: string;\n  searchFilter: string;\n  constructor(public searchService: SearchService) {\n    this.searchFilter = this.statusMatch[2];\n    this.searchValue = '';\n   }\n\n  ngOnInit() {\n  }\n  changeStatus(value) {\n    this.searchFilter = this.statusMatch[value];\n    this.changeSearch();\n  }\n  changeSearch() {\n    this.searchService.searchValueUpdate(this.searchValue, this.statusMatch.indexOf(this.searchFilter) + '');\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  todo works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, asapScheduler, pipe, of, from, interval, merge, fromEvent } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n\n  constructor(public http: HttpClient) { }\n  public get(url) {\n    return this.http.get(url);\n  }\n  public post(url: string, body: any): Observable<any> {\n     return this.http.post(url, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, asapScheduler, pipe, of, from, interval, merge, fromEvent } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  private subject = new Subject<Search>();\n  constructor() { }\n\n  getSearchValue() {\n    return this.subject.asObservable();\n  }\n  searchValueUpdate(val, filter) {\n  this.subject.next(<Search>\n  { 'val': val, 'filter': filter });\n  }\n}\n\nclass Search {\n'val': string;\n'filter': string;\n}\n","module.exports = \".dropdown {\\n    left:0%;\\n}\\n.rounded-circle {\\n    height: 50px;\\n    width: 50px;\\n    background-color: #ffeb3b;\\n}\\n.fab {\\n    margin-right: 3%;\\n    margin-bottom: 1.5%;\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n<div class=\\\"card-columns\\\">\\n  <div class=\\\"card\\\" *ngFor=\\\"let todo of todos\\\">\\n    <div class=\\\"card-body clearfix\\\">\\n      <img class=\\\"float-right\\\" src=\\\"../assets/icons/menu.svg\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n      <div class=\\\"dropdown-menu\\\">\\n      <a class=\\\"dropdown-item\\\" *ngIf=\\\"todo.status=='0'\\\" (click)=\\\"updateTodo('1',todo.id)\\\">Completed</a>\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\"  *ngIf=\\\"todo.status=='1'\\\" (click)=\\\"updateTodo('0',todo.id)\\\">Not Completed</a>\\n    </div>\\n      <h5 class=\\\"card-title\\\">{{todo.title}}</h5>\\n      \\n      <p class=\\\"card-text\\\">{{todo.todo}}</p>\\n\\n      <p class=\\\"card-text\\\"><small class=\\\"text-muted\\\">Due on {{todo.due}}</small> \\n      <a href=\\\"#\\\" class=\\\"badge badge-pill badge-primary float-right\\\" *ngIf=\\\"todo.status=='1'\\\">Completed</a>\\n      <!--<a href=\\\"#\\\"  class=\\\"badge badge-pill badge-secondary float-right\\\" *ngIf=\\\"\\\">Past</a>-->\\n      <a href=\\\"#\\\" class=\\\"badge badge-pill badge-warning float-right\\\" *ngIf=\\\"todo.status=='0'\\\">Not Completed</a>\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<div class=\\\"modal fade\\\" id=\\\"createModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Create Todo</h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n      <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"createTodo()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Title</label>\\n    <input type=\\\"text\\\" required name=\\\"title\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Title\\\" formControlName = \\\"title\\\">\\n    <div *ngIf=\\\"createForm.controls['title'].invalid && (createForm.controls['title'].dirty || createForm.controls['title'].touched)\\\"\\n    class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"createForm.controls['title'].errors.required\\\">\\n    Title is required.\\n  </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Date</label>\\n    <input type=\\\"date\\\" required name=\\\"date\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"\\\" formControlName = \\\"date\\\">\\n    <div *ngIf=\\\"createForm.controls['date'].invalid && (createForm.controls['date'].dirty || createForm.controls['date'].touched)\\\"\\n    class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"createForm.controls['date'].errors.required\\\">\\n    Date is required.\\n  </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"todo\\\">Todo</label>\\n    <textarea name=\\\"todo\\\" required class=\\\"form-control\\\" id=\\\"toto\\\" rows=\\\"6\\\" formControlName = \\\"todo\\\"></textarea>\\n    <div *ngIf=\\\"createForm.controls['todo'].invalid && (createForm.controls['todo'].dirty || createForm.controls['todo'].touched)\\\"\\n    class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"createForm.controls['todo'].errors.required\\\">\\n    Todo is required.\\n  </div>\\n    </div>\\n  </div>\\n</form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createTodo()\\\">Create Todo</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"fixed-bottom clearfix\\\">\\n  <div class=\\\"float-right fab\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createModal\\\" (click)=\\\"resetCreateTodoForm()\\\">\\n   <img src=\\\"../assets/icons/add.svg\\\" alt=\\\"...\\\" class=\\\"rounded-circle\\\">\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpServiceService } from '../../services/http-service.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport {SearchService} from '../../services/search.service';\ndeclare var $: any;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  todos: any = [];\n  todoStorage: any = [];\n  title: string;\n  todo: string;\n  date: string;\n  createForm: FormGroup;\n  formBuilder: FormBuilder;\n  searchText: string;\n  searchFilter: string;\n  constructor(public http: HttpServiceService, search: SearchService) {\n    this.title = '';\n    this.todo = '';\n    this.date = '';\n    this.createForm = this.createTodoForm();\n    search.getSearchValue().subscribe(searchValue => {\n      this.searchText = searchValue.val;\n      this.searchFilter = searchValue.filter;\n      console.log(searchValue);\n      this.search();\n    });\n  }\n\n  ngOnInit() {\n    this.getTodos();\n  }\n  getTodos() {\n    this.http.get('https://todoappcodatest.herokuapp.com/todos').subscribe(res => {\n      this.todos = res;\n      this.todoStorage = res;\n      console.log(this.todos);\n    });\n  }\n  createTodo() {\n    // if (this.createForm.invalid) {\n    //   return;\n    // }\n    console.log(this.createForm.controls['date'].value);\n    this.http.post('https://todoappcodatest.herokuapp.com/create', { title: this.createForm.controls['title'].value,\n       todo: this.createForm.controls['todo'].value,\n       due: this.createForm.controls['date'].value, status: '0'})\n    .subscribe(res => {\n      $('#createModal').modal('toggle');\n    this.getTodos();\n    });\n    this.resetCreateTodoForm();\n  }\n  createTodoForm() {\n    return new FormGroup({\n        todo: new FormControl('', Validators.required),\n        title: new FormControl('', Validators.required),\n        date: new FormControl('', Validators.required)\n    });\n  }\n  resetCreateTodoForm() {\n    this.createForm.reset();\n  }\n  updateTodo(status, id) {\n    this.http.post('https://todoappcodatest.herokuapp.com/update', {id: id, status: status })\n    .subscribe(res => {\n      this.getTodos();\n    });\n  }\n  search() {\n    this.todos = this.todoStorage;\n    if (this.searchFilter === '2') {\n      this.todos = this.todos.filter (item => {\n        if (item.title.toLowerCase().includes(this.searchText.toLowerCase())) {\n          return item;\n        }\n      });\n      return;\n    }\n    this.todos = this.todos.filter(item => {\n      if (item.status === this.searchFilter) {\n        if (item.title.toLowerCase().includes(this.searchText.toLowerCase())) {\n          return item;\n        }\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}